#pragma once

enum OpcodePrefix
{
  NO_PREFIX,
  ES_OVERRIDE  = 0x26,
  CS_OVERRIDE  = 0x2E,
  SS_OVERRIDE  = 0x36,
  DS_OVERRIDE  = 0x3E,
  FS_OVERRIDE  = 0x64,
  GS_OVERRIDE  = 0x65,
  OPERAND_SIZE = 0x66,
  ADDRESS_SIZE = 0x67,
  PFIX_WAIT    = 0x9B,
  PFIX_LOCK    = 0xF0,
  PFIX_REPNZ   = 0xF2,
  PFIX_REPZ    = 0xF3
};

enum Mnemonic
{
  DB,
  ADD, 
  PUSH,
  POP,
  OR,
  ADC,
  SBB,
  AND,
  DAA,
  SUB,
  DAS,
  XOR,
  AAA,
  CMP,
  AAS,
  INC,
  DEC,
  PUSHAD,
  POPAD,
  BOUND,
  ARPL,
  OPSIZE,
  ADSIZE,
  IMUL,
  INSB,
  INSW,
  OUTSB,
  OUTSW,
  JO,
  JNO,
  JB,
  JNB,
  JZ,
  JNZ,
  JNA,
  JA,
  JS,
  JNS,
  JP,
  JNP,
  JL,
  JNL,
  JNG,
  JG,
  TEST,
  XCHG,
  MOV,
  LEA,
  NOP,
  CWDE,
  CDQ,
  CALL,
  WAIT,
  PUSHFD,
  POPFD,
  SAHF,
  LAHF,
  MOVSB,
  MOVSW,
  CMPSB,
  CMPSW,
  STOSB,
  STOSW,
  LODSB,
  LODSW,
  SCASB,
  SCASW,
  ROL,
  ROR,
  RCL,
  RCR,
  SHL,
  SHR,
  SAR,
  RETN, 
  RET,
  LES,
  LDS,
  ENTER,
  LEAVE,
  RETF,
  INT3,
  INT,
  INTO,
  IRETD,
  AMX,
  ADX,
  SALC,
  XLATB,
  FADD,
  FMUL,
  FCOM,
  FCOMP,
  FSUB,
  FSUBR,
  FDIV,
  FDIVR,
  FLD,
  FXCH,
  FST,
  FNOP,
  FSTP,
  FSTP1,
  FLDENV,
  FCHS,
  FABS,
  FTST,
  FXAM,
  FLDCW,
  FLD1,
  FLDL2T,
  FLDL2E,
  FLDPI,
  FLDLG2,
  FLDLN2,
  FLDZ,
  FNSTENV,
  FSTENV,
  F2XM1,
  FYL2X,
  FPTAN,
  FPATAN,
  FXTRACT,
  FPREM1,
  FDECSTP,
  FINCSTP,
  FNSTCW,
  FSTCW,
  FPREM,
  FYL2XP1,
  FSQRT,
  FSINCOS,
  FRNDINT,
  FSCALE,
  FSIN,
  FCOS,
  FIADD,
  FCMOVB,
  FIMUL,
  FCMOVE,
  FICOM,
  FCMOVBE,
  FCOMP5,
  FICOMP,
  FCMOVU,
  FISUB,
  FISUBR,
  FUCOMPP,
  FIDIV,
  FIDIVR,
  FILD,
  FCMOVNB,
  FISTTP,
  FCMOVNE,
  FIST,
  FCMOVNBE,
  FISTP,
  FCMOVNU,
  FNENI,
  FNDISI,
  FNCLEX,
  FCLEX,
  FNINIT,
  FINIT,
  FNSETPM,
  FUCOMI,
  FCOMI,
  FCOM2,
  FCOMP3,
  FFREE,
  FXCH4,
  FUCOM,
  FUCOMP,
  FNSAVE,
  FSAVE,
  FNSTSW,
  FSTSW,
  FADDP,
  FMULP,
  FCOMPS,
  FCOMPP,
  FSUBRP,
  FSUBP,
  FDIVRP,
  FDIVP,
  FFREEP,
  FXCH7,
  FSTP8,
  FSTP9,
  FBLD,
  FUCOMIP,
  FCOMIP,
  FBSTP,
  LOOPNZ,
  LOOPZ,
  LOOP,
  JCXZ,
  IN,
  OUT,
  JMP,
  LOCK,
  INT1,
  REPNZ,
  REPZ,
  HLT,
  CMC,
  NOT,
  NEG,
  MUL,
  DIV,
  IDIV,
  CLC,
  STC,
  CLI,
  STI,
  CLD,
  STD,
  CALLF,
  JMPF,

  // 0x0F Mnemonics
  SLDT,
  STR,
  LLDT,
  LTR,
  VERR,
  VERW,
  SGDT,
  VMCALL,
  VMLAUNCH,
  VMRESUME,
  VMXOFF,
  SIDT,
  MONITOR,
  MWAIT,
  LGDT,
  XGETBV,
  XSETBV,
  LIDT,
  SMSW,
  LMSW,
  INVLPG,
  RDTSCP,
  LAR,
  LSL,
  CLTS,
  INVD,
  WBINVD,
  UD2,
  MOVUPS,
  MOVSS,
  MOVUPD,
  MOVSD,
  MOVHLPS,
  MOVLPS,
  MOVLPD,
  MOVDDUP,
  MOVSLDUP,
  UNPCKLPS,
  UNPCKLPD,
  UNPCKHPS,
  UNPCKHPD,
  MOVLHPS,
  MOVHPS,
  MOVHPD,
  MOVSHDUP,
  PREFETCHNTA,
  PREFETCHT0,
  PREFETCHT1,
  PREFETCHT2, 
  HINT_NOP,
  MOVAPS,
  MOVAPD,
  CVTPI2PS,
  CVTSI2SS,
  CVTPI2PD,
  CVTSI2SD,
  MOVNTPS,
  MOVNTPD,
  CVTTPS2PI,
  CVTTSS2Si,
  CVTTPD2PI,
  CVTTSS2SI,
  CVTTSD2SI,
  CVTPS2PI,
  CVTSS2SI,
  CVTPD2PI,
  CVTSD2SI,
  UCOMISS,
  UCOMISD,
  COMISS,
  COMISD,
  WRMSR,
  RDTSC,
  RDMSR,
  RDPMC,
  SYSENTER,
  SYSEXIT,
  GETSEC,
  PSHUFB,
  PHADDW,
  PHADDD,
  PHADDSW,
  PMADDUBSW,
  PHSUBW,
  PHSUBD,
  PHSUBSW,
  PSIGNB,
  PSIGNW,
  PSIGND,
  PMULHRSW,
  PBLENDVS,
  BLENDVPS,
  BLENDVPD,
  PTEST,
  PABSB,
  PABSW,
  PABSD,
  PMOVSXBW,
  PMOVSXBD,
  PMOVSXBQ,
  PMOVSXWD,
  PMOVSXWQ,
  PMOVSXDQ,
  PMULDQ,
  PCMPEQQ,
  MOVNTDQA,
  PACKUSDW,
  PMOVZXBW,
  PMOVZXBD,
  PMOVZXBQ,
  PMOVZXWD,
  PMOVZXWQ,
  PMOVZXDQ,
  PCMPGTQ,
  PMINSB,
  PMINSD,
  PMINUW,
  PMINUD,
  PMAXSB,
  PMAXSD,
  PMAXUW,
  PMAXUD,
  PMULLD,
  PHMINPOSUW,
  INVEPT,
  INVVPID,
  MOVBE,
  CRC32,
  ROUNDPS,
  ROUNDPD,
  ROUNDSS,
  ROUNDSD,
  BLENDPS,
  BLENDPD,
  PBLENDW,
  PALIGNR,
  PEXTRB,
  PEXTRW,
  PEXTRD,
  PEXTRQ,
  EXTRACTPS,
  PINSRB,
  INSERTPS,
  PINSRD,
  PINSRQ,
  DPPS,
  DPPD,
  MPSADBW,
  PCMPESTRM,
  PCMPESTRI,
  PCMPISTRM,
  PCMPISTRI,
  CMOVO,
  CMOVNO,
  CMOVB,
  CMOVNAE,
  CMOVC,
  CMOVNB,
  CMOVAE,
  CMOVNC,
  CMOVZ,
  CMOVE,
  CMOVNZ,
  CMOVNE,
  CMOVBE,
  CMOVNA,
  CMOVNBE,
  CMOVA,
  CMOVS,
  CMOVNS,
  CMOVP,
  CMOVPE,
  CMOVNP,
  CMOVPO,
  CMOVL,
  CMOVNGE,
  CMOVNL,
  CMOVGE,
  CMOVLE,
  CMOVNG,
  CMOVNLE,
  CMOVG,
  MOVMSKPS,
  MOVMSKPD,
  SQRTPS,
  SQRTSS,
  SQRTPD,
  SQRTSD,
  RSQRTPS,
  RSQRTSS,
  RCPPS,
  RCPSS,
  ANDPS,
  ANDPD,
  ANDNPS,
  ANDNPD,
  ORPS,
  ORPD,
  XORPS,
  XORPD,
  ADDPS,
  ADDSS,
  ADDPD,
  ADDSD,
  MULPS,
  MULSS,
  MULPD,
  MULSD,
  CVTPS2PD,
  CVTPD2PS,
  CVTSS2SD,
  CVTSD2SS,
  CVTDQ2PS,
  CVTPS2DQ,
  CVTTPS2DQ,
  SUBPS,
  SUBSS,
  SUBPD,
  SUBSD,
  MINPS,
  MINSS,
  MINPD,
  MINSD,
  DIVPS,
  DIVSS,
  DIVPD,
  DIVSD,
  MAXPS,
  MAXSS,
  MAXPD,
  MAXSD,
  PUNPCKLBW,
  PUNPCKLWD,
  PUNPCKLDQ,
  PACKSSWB,
  PCMPGTB,
  PCMPGTW,
  PCMPGTD,
  PACKUSWB,
  PUNPCKHBW,
  PUNPCKHWD,
  PUNPCKHDQ,
  PACKSSDW,
  PUNPCKLQDQ,
  PUNPCKHQDQ,
  MOVD,
  MOVQ,
  MOVDQA,
  MOVDQU,
  PSHUFW,
  PSHUFLW,
  PSHUFHW,
  PSHUFD,
  PSRLW,
  PSRAW,
  PSLLW,
  PSRLD,
  PSRAD,
  PSLLD,
  PSRLQ,
  PSRLDQ,
  PSLLQ,
  PSLLDQ,
  PCMPEQB,
  PCMPEQW,
  PCMPEQD,
  EMMS,
  VMREAD,
  VMWRITE,
  HADDPD,
  HADDPS,
  HSUBPD,
  HSUBPS,
  SETO,
  SETNO,
  SETB,
  SETNAE,
  SETC,
  SETNB,
  SETAE,
  SETNC,
  SETZ,
  SETE,
  SETNZ,
  SETNE,
  SETBE,
  SETNA,
  SETNBE,
  SETA,
  SETS,
  SETNS,
  SETP,
  SETPE,
  SETNP,
  SETPO,
  SETL,
  SETNGE,
  SETNL,
  SETGE,
  SETLE,
  SETNG,
  SETNLE,
  SETG,
  CPUID,
  BT,
  SHLD,
  RSM,
  BTS,
  SHRD,
  FXSAVE,
  FXRSTOR,
  LDMXCSR,
  STMXCSR,
  XSAVE,
  LFENCE,
  XRSTOR,
  MFENCE,
  SFENCE,
  CLFLUSH,
  CMPXCHG,
  LSS,
  BTR,
  LFS,
  LGS,
  MOVZX,
  POPCNT,
  UD,
  BTC,
  BSF,
  BSR,
  MOVSX,
  XADD,
  CMPPS,
  CMPSS,
  CMPPD,
  CMPSD,
  MOVNTI,
  PINSRW,
  SHUFPS,
  SHUFPD,
  CMPXCHG8B,
  VMPTRLD,
  VMCLEAR,
  VMXON,
  VMPTRST,
  BSWAP,
  ADDSUBPD,
  ADDSUBPS,
  PADDQ,
  PMULLW,
  MOVQ2DQ,
  MOVDQ2Q,
  PMOVMSKB,
  PSUBUSB,
  PSUBUSW,
  PMINUB,
  PAND,
  PADDUSB,
  PADDUSW,
  PMAXUB,
  PANDN,
  PAVGB,
  PAVGW,
  PMULHUW,
  PMULHW,
  CVTPD2DQ,
  CVTTPD2DQ,
  CVTDQ2PD,
  MOVNTQ,
  MOVNTDQ,
  PSUBSB,
  PSUBSW,
  PMINSW,
  POR,
  PADDSB,
  PADDSW,
  PMAXSW,
  PXOR,
  LDDQU,
  PMULUDQ,
  PMADDWD,
  PSADBW,
  MASKMOVQ,
  MASKMOVDQU,
  PSUBB,
  PSUBW,
  PSUBD,
  PSUBQ,
  PADDB,
  PADDW,
  PADDD,

  MAX_OPCODE,
  INVALID_OP,
  TWO_OP,  // 0x0F
  PFIX,

  // The below are to specify check extension (REG field of Mod R/M)..
  EXT80,  // 0x80 + 0x82
  EXT81,  // 0x81
  EXT83,  // 0x83
  EXTC0,  // 0xC0
  EXTC1,  // 0xC1
  EXTD0,  // 0xD0
  EXTD1,  // 0xD1
  EXTD2,  // 0xD2
  EXTD3,  // 0xD3
  EXT_4,  // 0xD8
  EXT_5,  // 0xD9
  EXT_6,  // 0xDA
  EXT_7,  // 0xDB
  EXT_8,  // 0xDC
  EXT_9,  // 0xDD
  EXT_A,  // 0xDE
  EXT_B,  // 0xDF
  EXT_C,  // 0xF6
  EXT_D,  // 0xF7
  EXT_E,  // 0xFE
  EXT_F,  // 0xFF
  OPF_0,  // 0x0F 0x00 
  OPF_1,  // 0x0F 0x01
  OPF_2,  // 0x0F 0x18
  OPF_3,  // 0x0F 0x1F
  OPF_4,  // 0x0F 0x38
  OPF_5,  // 0x0F 0x3A
  OPF_6,  // 0x0F 0x72
  OPF_7,  // 0x0F 0x73
  OPF_8,  // 0x0F 0xAE
  OPF_9,  // 0x0F
  OPF_A,  // 0x0F
  OPF_B,  // 0x0F
  OPF_C,  // 0x0F
  OPF_D,  // 0x0F
  OPF_E,  // 0x0F
  OPF_F   // 0x0F
};

static const char* MnemonicStrings[static_cast<size_t>(Mnemonic::MAX_OPCODE)] =
{
  "DB",
  "ADD",
  "PUSH",
  "POP",
  "OR",
  "ADC",
  "SBB",
  "AND",
  "DAA",
  "SUB",
  "DAS",
  "XOR",
  "AAA",
  "CMP",
  "AAS",
  "INC",
  "DEC",
  "PUSHAD",
  "POPAD",
  "BOUND",
  "ARPL",
  "OPSIZE",
  "ADSIZE",
  "IMUL",
  "INSB",
  "INSW",
  "OUTSB",
  "OUTSW",
  "JO",
  "JNO",
  "JB",
  "JNB",
  "JZ",
  "JNZ",
  "JNA",
  "JA",
  "JS",
  "JNS",
  "JP",
  "JNP",
  "JL",
  "JNL",
  "JNG",
  "JG",
  "TEST",
  "XCHG",
  "MOV",
  "LEA",
  "NOP",
  "CWDE",
  "CDQ",
  "CALL",
  "WAIT",
  "PUSHFD",
  "POPFD",
  "SAHF",
  "LAHF",
  "MOVSB",
  "MOVSW",
  "CMPSB",
  "CMPSW",
  "STOSB",
  "STOSW",
  "LODSB",
  "LODSW",
  "SCASB",
  "SCASW",
  "ROL",
  "ROR",
  "RCL",
  "RCR",
  "SHL",
  "SHR",
  "SAR",
  "RETN",
  "RET",
  "LES",
  "LDS",
  "ENTER",
  "LEAVE",
  "RETF",
  "INT3",
  "INT",
  "INTO",
  "IRETD",
  "AMX",
  "ADX",
  "SALC",
  "XLATB",
  "FADD",
  "FMUL",
  "FCOM",
  "FCOMP",
  "FSUB",
  "FSUBR",
  "FDIV",
  "FDIVR",
  "FLD",
  "FXCH",
  "FST",
  "FNOP",
  "FSTP",
  "FSTP1",
  "FLDENV",
  "FCHS",
  "FABS",
  "FTST",
  "FXAM",
  "FLDCW",
  "FLD1",
  "FLDL2T",
  "FLDL2E",
  "FLDPI",
  "FLDLG2",
  "FLDLN2",
  "FLDZ",
  "FNSTENV",
  "FSTENV",
  "F2XM1",
  "FYL2X",
  "FPTAN",
  "FPATAN",
  "FXTRACT",
  "FPREM1",
  "FDECSTP",
  "FINCSTP",
  "FNSTCW",
  "FSTCW",
  "FPREM",
  "FYL2XP1",
  "FSQRT",
  "FSINCOS",
  "FRNDINT",
  "FSCALE",
  "FSIN",
  "FCOS",
  "FIADD",
  "FCMOVB",
  "FIMUL",
  "FCMOVE",
  "FICOM",
  "FCMOVBE",
  "FCOMP5",
  "FICOMP",
  "FCMOVU",
  "FISUB",
  "FISUBR",
  "FUCOMPP",
  "FIDIV",
  "FIDIVR",
  "FILD",
  "FCMOVNB",
  "FISTTP",
  "FCMOVNE",
  "FIST",
  "FCMOVNBE",
  "FISTP",
  "FCMOVNU",
  "FNENI",
  "FNDISI",
  "FNCLEX",
  "FCLEX",
  "FNINIT",
  "FINIT",
  "FNSETPM",
  "FUCOMI",
  "FCOMI",
  "FCOM2",
  "FCOMP3",
  "FFREE",
  "FXCH4",
  "FUCOM",
  "FUCOMP",
  "FNSAVE",
  "FSAVE",
  "FNSTSW",
  "FSTSW",
  "FADDP",
  "FMULP",
  "FCOMPS",
  "FCOMPP",
  "FSUBRP",
  "FSUBP",
  "FDIVRP",
  "FDIVP",
  "FFREEP",
  "FXCH7",
  "FSTP8",
  "FSTP9",
  "FBLD",
  "FUCOMIP",
  "FCOMIP",
  "FBSTP",
  "LOOPNZ",
  "LOOPZ",
  "LOOP",
  "JCXZ",
  "IN",
  "OUT",
  "JMP",
  "LOCK",
  "INT1",
  "REPNZ",
  "REPZ",
  "HLT",
  "CMC",
  "NOT",
  "NEG",
  "MUL",
  "DIV",
  "IDIV",
  "CLC",
  "STC",
  "CLI",
  "STI",
  "CLD",
  "STD",
  "CALLF",
  "JMPF",

  // 0x0F Mnemonics
  "SLDT",
  "STR",
  "LLDT",
  "LTR",
  "VERR",
  "VERW",
  "SGDT",
  "VMCALL",
  "VMLAUNCH",
  "VMRESUME",
  "VMXOFF",
  "SIDT",
  "MONITOR",
  "MWAIT",
  "LGDT",
  "XGETBV",
  "XSETBV",
  "LIDT",
  "SMSW",
  "LMSW",
  "INVLPG",
  "RDTSCP",
  "LAR",
  "LSL",
  "CLTS",
  "INVD",
  "WBINVD",
  "UD2",
  "MOVUPS",
  "MOVSS",
  "MOVUPD",
  "MOVSD",
  "MOVHLPS",
  "MOVLPS",
  "MOVLPD",
  "MOVDDUP",
  "MOVSLDUP",
  "UNPCKLPS",
  "UNPCKLPD",
  "UNPCKHPS",
  "UNPCKHPD",
  "MOVLHPS",
  "MOVHPS",
  "MOVHPD",
  "MOVSHDUP",
  "PREFETCHNTA",
  "PREFETCHT0",
  "PREFETCHT1",
  "PREFETCHT2",
  "HINT_NOP",
  "MOVAPS",
  "MOVAPD",
  "CVTPI2PS",
  "CVTSI2SS",
  "CVTPI2PD",
  "CVTSI2SD",
  "MOVNTPS",
  "MOVNTPD",
  "CVTTPS2PI",
  "CVTTSS2Si",
  "CVTTPD2PI",
  "CVTTSS2SI",
  "CVTTSD2SI",
  "CVTPS2PI",
  "CVTSS2SI",
  "CVTPD2PI",
  "CVTSD2SI",
  "UCOMISS",
  "UCOMISD",
  "COMISS",
  "COMISD",
  "WRMSR",
  "RDTSC",
  "RDMSR",
  "RDPMC",
  "SYSENTER",
  "SYSEXIT",
  "GETSEC",
  "PSHUFB",
  "PHADDW",
  "PHADDD",
  "PHADDSW",
  "PMADDUBSW",
  "PHSUBW",
  "PHSUBD",
  "PHSUBSW",
  "PSIGNB",
  "PSIGNW",
  "PSIGND",
  "PMULHRSW",
  "PBLENDVS",
  "BLENDVPS",
  "BLENDVPD",
  "PTEST",
  "PABSB",
  "PABSW",
  "PABSD",
  "PMOVSXBW",
  "PMOVSXBD",
  "PMOVSXBQ",
  "PMOVSXWD",
  "PMOVSXWQ",
  "PMOVSXDQ",
  "PMULDQ",
  "PCMPEQQ",
  "MOVNTDQA",
  "PACKUSDW",
  "PMOVZXBW",
  "PMOVZXBD",
  "PMOVZXBQ",
  "PMOVZXWD",
  "PMOVZXWQ",
  "PMOVZXDQ",
  "PCMPGTQ",
  "PMINSB",
  "PMINSD",
  "PMINUW",
  "PMINUD",
  "PMAXSB",
  "PMAXSD",
  "PMAXUW",
  "PMAXUD",
  "PMULLD",
  "PHMINPOSUW",
  "INVEPT",
  "INVVPID",
  "MOVBE",
  "CRC32",
  "ROUNDPS",
  "ROUNDPD",
  "ROUNDSS",
  "ROUNDSD",
  "BLENDPS",
  "BLENDPD",
  "PBLENDW",
  "PALIGNR",
  "PEXTRB",
  "PEXTRW",
  "PEXTRD",
  "PEXTRQ",
  "EXTRACTPS",
  "PINSRB",
  "INSERTPS",
  "PINSRD",
  "PINSRQ",
  "DPPS",
  "DPPD",
  "MPSADBW",
  "PCMPESTRM",
  "PCMPESTRI",
  "PCMPISTRM",
  "PCMPISTRI",
  "CMOVO",
  "CMOVNO",
  "CMOVB",
  "CMOVNAE",
  "CMOVC",
  "CMOVNB",
  "CMOVAE",
  "CMOVNC",
  "CMOVZ",
  "CMOVE",
  "CMOVNZ",
  "CMOVNE",
  "CMOVBE",
  "CMOVNA",
  "CMOVNBE",
  "CMOVA",
  "CMOVS",
  "CMOVNS",
  "CMOVP",
  "CMOVPE",
  "CMOVNP",
  "CMOVPO",
  "CMOVL",
  "CMOVNGE",
  "CMOVNL",
  "CMOVGE",
  "CMOVLE",
  "CMOVNG",
  "CMOVNLE",
  "CMOVG",
  "MOVMSKPS",
  "MOVMSKPD",
  "SQRTPS",
  "SQRTSS",
  "SQRTPD",
  "SQRTSD",
  "RSQRTPS",
  "RSQRTSS",
  "RCPPS",
  "RCPSS",
  "ANDPS",
  "ANDPD",
  "ANDNPS",
  "ANDNPD",
  "ORPS",
  "ORPD",
  "XORPS",
  "XORPD",
  "ADDPS",
  "ADDSS",
  "ADDPD",
  "ADDSD",
  "MULPS",
  "MULSS",
  "MULPD",
  "MULSD",
  "CVTPS2PD",
  "CVTPD2PS",
  "CVTSS2SD",
  "CVTSD2SS",
  "CVTDQ2PS",
  "CVTPS2DQ",
  "CVTTPS2DQ",
  "SUBPS",
  "SUBSS",
  "SUBPD",
  "SUBSD",
  "MINPS",
  "MINSS",
  "MINPD",
  "MINSD",
  "DIVPS",
  "DIVSS",
  "DIVPD",
  "DIVSD",
  "MAXPS",
  "MAXSS",
  "MAXPD",
  "MAXSD",
  "PUNPCKLBW",
  "PUNPCKLWD",
  "PUNPCKLDQ",
  "PACKSSWB",
  "PCMPGTB",
  "PCMPGTW",
  "PCMPGTD",
  "PACKUSWB",
  "PUNPCKHBW",
  "PUNPCKHWD",
  "PUNPCKHDQ",
  "PACKSSDW",
  "PUNPCKLQDQ",
  "PUNPCKHQDQ",
  "MOVD",
  "MOVQ",
  "MOVDQA",
  "MOVDQU",
  "PSHUFW",
  "PSHUFLW",
  "PSHUFHW",
  "PSHUFD",
  "PSRLW",
  "PSRAW",
  "PSLLW",
  "PSRLD",
  "PSRAD",
  "PSLLD",
  "PSRLQ",
  "PSRLDQ",
  "PSLLQ",
  "PSLLDQ",
  "PCMPEQB",
  "PCMPEQW",
  "PCMPEQD",
  "EMMS",
  "VMREAD",
  "VMWRITE",
  "HADDPD",
  "HADDPS",
  "HSUBPD",
  "HSUBPS",
  "SETO",
  "SETNO",
  "SETB",
  "SETNAE",
  "SETC",
  "SETNB",
  "SETAE",
  "SETNC",
  "SETZ",
  "SETE",
  "SETNZ",
  "SETNE",
  "SETBE",
  "SETNA",
  "SETNBE",
  "SETA",
  "SETS",
  "SETNS",
  "SETP",
  "SETPE",
  "SETNP",
  "SETPO",
  "SETL",
  "SETNGE",
  "SETNL",
  "SETGE",
  "SETLE",
  "SETNG",
  "SETNLE",
  "SETG",
  "CPUID",
  "BT",
  "SHLD",
  "RSM",
  "BTS",
  "SHRD",
  "FXSAVE",
  "FXRSTOR",
  "LDMXCSR",
  "STMXCSR",
  "XSAVE",
  "LFENCE",
  "XRSTOR",
  "MFENCE",
  "SFENCE",
  "CLFLUSH",
  "CMPXCHG",
  "LSS",
  "BTR",
  "LFS",
  "LGS",
  "MOVZX",
  "POPCNT",
  "UD",
  "BTC",
  "BSF",
  "BSR",
  "MOVSX",
  "XADD",
  "CMPPS",
  "CMPSS",
  "CMPPD",
  "CMPSD",
  "MOVNTI",
  "PINSRW",
  "SHUFPS",
  "SHUFPD",
  "CMPXCHG8B",
  "VMPTRLD",
  "VMCLEAR",
  "VMXON",
  "VMPTRST",
  "BSWAP",
  "ADDSUBPD",
  "ADDSUBPS",
  "PADDQ",
  "PMULLW",
  "MOVQ2DQ",
  "MOVDQ2Q",
  "PMOVMSKB",
  "PSUBUSB",
  "PSUBUSW",
  "PMINUB",
  "PAND",
  "PADDUSB",
  "PADDUSW",
  "PMAXUB",
  "PANDN",
  "PAVGB",
  "PAVGW",
  "PMULHUW",
  "PMULHW",
  "CVTPD2DQ",
  "CVTTPD2DQ",
  "CVTDQ2PD",
  "MOVNTQ",
  "MOVNTDQ",
  "PSUBSB",
  "PSUBSW",
  "PMINSW",
  "POR",
  "PADDSB",
  "PADDSW",
  "PMAXSW",
  "PXOR",
  "LDDQU",
  "PMULUDQ",
  "PMADDWD",
  "PSADBW",
  "MASKMOVQ",
  "MASKMOVDQU",
  "PSUBB",
  "PSUBW",
  "PSUBD",
  "PSUBQ",
  "PADDB",
  "PADDW",
  "PADDD",
};